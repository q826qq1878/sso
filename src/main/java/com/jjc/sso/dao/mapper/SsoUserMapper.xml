<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jjc.sso.dao.SsoUserMapper" >
  <resultMap id="BaseResultMap" type="com.jjc.sso.po.SsoUser" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="USERNAME" property="username" jdbcType="VARCHAR" />
    <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
    <result column="MOBILE" property="mobile" jdbcType="VARCHAR" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="ISEMAIL_STAUS" property="isemailStaus" jdbcType="VARCHAR" />
    <result column="USER_IP" property="userIp" jdbcType="VARCHAR" />
    <result column="LAST_TIME" property="lastTime" jdbcType="TIMESTAMP" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="CREATE_MAN" property="createMan" jdbcType="VARCHAR" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_MAN" property="updateMan" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="CHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, USERNAME, PASSWORD, MOBILE, EMAIL, ISEMAIL_STAUS, USER_IP, LAST_TIME, CREATE_TIME, 
    CREATE_MAN, UPDATE_TIME, UPDATE_MAN, STATUS
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sso_user
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sso_user
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jjc.sso.po.SsoUser" >
    insert into sso_user (ID, USERNAME, PASSWORD, 
      MOBILE, EMAIL, ISEMAIL_STAUS, 
      USER_IP, LAST_TIME, CREATE_TIME, 
      CREATE_MAN, UPDATE_TIME, UPDATE_MAN, 
      STATUS)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{isemailStaus,jdbcType=VARCHAR}, 
      #{userIp,jdbcType=VARCHAR}, #{lastTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createMan,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateMan,jdbcType=VARCHAR}, 
      #{status,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jjc.sso.po.SsoUser" >
    insert into sso_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="username != null" >
        USERNAME,
      </if>
      <if test="password != null" >
        PASSWORD,
      </if>
      <if test="mobile != null" >
        MOBILE,
      </if>
      <if test="email != null" >
        EMAIL,
      </if>
      <if test="isemailStaus != null" >
        ISEMAIL_STAUS,
      </if>
      <if test="userIp != null" >
        USER_IP,
      </if>
      <if test="lastTime != null" >
        LAST_TIME,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="createMan != null" >
        CREATE_MAN,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="updateMan != null" >
        UPDATE_MAN,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="isemailStaus != null" >
        #{isemailStaus,jdbcType=VARCHAR},
      </if>
      <if test="userIp != null" >
        #{userIp,jdbcType=VARCHAR},
      </if>
      <if test="lastTime != null" >
        #{lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createMan != null" >
        #{createMan,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateMan != null" >
        #{updateMan,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jjc.sso.po.SsoUser" >
    update sso_user
    <set >
      <if test="username != null" >
        USERNAME = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        MOBILE = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="isemailStaus != null" >
        ISEMAIL_STAUS = #{isemailStaus,jdbcType=VARCHAR},
      </if>
      <if test="userIp != null" >
        USER_IP = #{userIp,jdbcType=VARCHAR},
      </if>
      <if test="lastTime != null" >
        LAST_TIME = #{lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createMan != null" >
        CREATE_MAN = #{createMan,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateMan != null" >
        UPDATE_MAN = #{updateMan,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=CHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jjc.sso.po.SsoUser" >
    update sso_user
    set USERNAME = #{username,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      MOBILE = #{mobile,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      ISEMAIL_STAUS = #{isemailStaus,jdbcType=VARCHAR},
      USER_IP = #{userIp,jdbcType=VARCHAR},
      LAST_TIME = #{lastTime,jdbcType=TIMESTAMP},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      CREATE_MAN = #{createMan,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      UPDATE_MAN = #{updateMan,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=CHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>

  <select id="findByName" resultMap="BaseResultMap" >
    SELECT * FROM sso_user WHERE
     ( USERNAME = #{loginUser} or MOBILE = #{loginUser} or (EMAIL = #{loginUser} and ISEMAIL_STAUS = 1) ) and STATUS = 0
  </select>

  <select id="findByPhone" resultMap="BaseResultMap" >
    SELECT * FROM sso_user WHERE
    MOBILE = #{phone}
    and STATUS = 0
  </select>

  <select id="findByEmail" resultMap="BaseResultMap" >
    SELECT * FROM sso_user WHERE
    EMAIL = #{email}
    and STATUS = 0
    and ISEMAIL_STAUS = 1
  </select>




</mapper>